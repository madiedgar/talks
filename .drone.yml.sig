eyJhbGciOiJIUzI1NiJ9.PEAgZGVmaW5lICJzdGFydFBpcGVsaW5lIiBAPgpwaXBlbGluZToKPEAgZW5kIEA-Cgo8QCBkZWZpbmUgImluZm9ybVN0YXJ0IiBAPgogICAgPEAgLm5hbWUgQD46IAogICAgICAgIGltYWdlOiA8QCAuaW1hZ2UgQD4KICAgICAgICBjaGFubmVsOiA8QCAuY2hhbm5lbCBAPgogICAgICAgIHRlbXBsYXRlOiB8CiAgICAgICAgICAgIDxAIC50ZW1wbGF0ZSBAPgo8QCBlbmQgQD4KCjxAIGRlZmluZSAiYnVpbGRUZXN0IiBAPgogICAgPEAgLm5hbWUgQD46CiAgICAgICAgaW1hZ2U6IDxAIC5pbWFnZSBAPgogICAgICAgIGNvbW1hbmRzOiA8QCByYW5nZSAuY29tbWFuZHMgQD4KICAgICAgICAgICAgLSA8QC0gLiAtQD4KICAgICAgICA8QCBlbmQgQD4KICAgICAgICB3aGVuOgogICAgICAgICAgICBldmVudDogPEAgLndoZW4uZXZlbnQgQD4KPEAgZW5kIEA-Cgo8QCBkZWZpbmUgImRvY2tlcml6ZSIgQD4KICAgIDxAIC5uYW1lIEA-OgogICAgICAgIGltYWdlOiA8QCAuaW1hZ2UgQD4KICAgICAgICBwcml2aWxlZ2VkOiA8QCAucHJpdmlsZWdlZCBAPgogICAgICAgIHJlZ2lzdHJ5OiA8QCAucmVnaXN0cnkgQD4KICAgICAgICByZXBvOiA8QCAucmVwbyBAPgogICAgICAgIGJ1aWxkX2FyZ3M6IDxAIHJhbmdlIC5idWlsZEFyZ3MgQD4KICAgICAgICAgICAgLSA8QC0gLiAtQD4KICAgICAgICA8QCBlbmQgQD4KICAgICAgICB0YWdzOiA8QCByYW5nZSAudGFncyBAPgogICAgICAgICAgICAtIDxALSAuIC1APgogICAgICAgIDxAIGVuZCBAPgogICAgICAgIHdoZW46CiAgICAgICAgICAgIGV2ZW50OiA8QCAud2hlbi5ldmVudCBAPgo8QCBlbmQgQD4KCjxAIGRlZmluZSAiZGVwbG95U3RhZ2UiIEA-CiAgICA8QCAubmFtZSBAPjoKICAgICAgICBpbWFnZTogPEAgLmltYWdlIEA-CiAgICAgICAgcHVsbDogPEAgLnB1bGwgQD4KICAgICAgICB0YXJnZXRzOiA8QCByYW5nZSAudGFyZ2V0cyBAPgogICAgICAgICAgICAtIDxALSAuIC1APgogICAgICAgIDxAIGVuZCBAPgogICAgICAgIHR5cGU6IDxAIC50eXBlIEA-CiAgICAgICAgdGFnOiA8QCAudGFnIEA-CiAgICAgICAgaW5zZWN1cmU6IDxAIC5pbnNlY3VyZSBAPgogICAgICAgIHVzZUVudmlyb25tZW50OiA8QCAudXNlRW52aXJvbm1lbnQgQD4KICAgICAgICBmdW5jdGlvbnM6IDxAIHJhbmdlIC5mdW5jdGlvbnMgQD4KICAgICAgICAgICAgLSA8QC0gLiAtQD4KICAgICAgICA8QCBlbmQgQD4KICAgICAgICB3aGVuOgogICAgICAgICAgICBldmVudDogPEAgLndoZW4uZXZlbnQgQD4KPEAgZW5kIEA-Cgo8QCBkZWZpbmUgImRlcGxveVByb2QiIEA-CiAgICA8QCAubmFtZSBAPjoKICAgICAgICBpbWFnZTogPEAgLmltYWdlIEA-CiAgICAgICAgcHVsbDogPEAgLnB1bGwgQD4KICAgICAgICB0YXJnZXRzOiA8QCByYW5nZSAudGFyZ2V0cyBAPgogICAgICAgICAgICAtIDxALSAuIC1APgogICAgICAgIDxAIGVuZCBAPgogICAgICAgIHR5cGU6IDxAIC50eXBlIEA-CiAgICAgICAgdGFnOiA8QCAudGFnIEA-CiAgICAgICAgaW5zZWN1cmU6IDxAIC5pbnNlY3VyZSBAPgogICAgICAgIHVzZUVudmlyb25tZW50OiA8QCAudXNlRW52aXJvbm1lbnQgQD4KICAgICAgICBmdW5jdGlvbnM6IDxAIHJhbmdlIC5mdW5jdGlvbnMgQD4KICAgICAgICAgICAgLSA8QC0gLiAtQD4KICAgICAgICA8QCBlbmQgQD4KICAgICAgICB3aGVuOgogICAgICAgICAgICBldmVudDogPEAgLndoZW4uZXZlbnQgQD4KPEAgZW5kIEA-Cgo8QCBkZWZpbmUgImluZm9ybUVuZCIgQD4KICAgIDxAIC5uYW1lIEA-OgogICAgICAgIGltYWdlOiA8QCAuaW1hZ2UgQD4KICAgICAgICBjaGFubmVsOiA8QCAuY2hhbm5lbCBAPgogICAgICAgIHRlbXBsYXRlOiB8CiAgICAgICAgICAgIDxAIC50ZW1wbGF0ZSBAPgogICAgICAgIHdoZW46CiAgICAgICAgICAgIHN0YXR1czogPEAgLndoZW4uc3RhdHVzIEA-CjxAIGVuZCBAPgo.XqHXRuJoh1BETZxcz5JQIkgTCXqH7pe8cRvQqkclIMI